// <auto-generated />
using System;
using HayvanBakimiDataAnnotation.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HayvanBakimiDataAnnotation.Migrations
{
    [DbContext(typeof(AppDbContext6))]
    partial class AppDbContext6ModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HayvanBakimiDataAnnotation.Models.Bakici", b =>
                {
                    b.Property<int>("BakiciId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BakiciId"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BakiciId");

                    b.ToTable("Bakicilar");
                });

            modelBuilder.Entity("HayvanBakimiDataAnnotation.Models.Hayvan", b =>
                {
                    b.Property<int>("HayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HayId"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Agirlik")
                        .HasColumnType("int")
                        .HasColumnName("Kilo");

                    b.Property<int>("BakiciId")
                        .HasColumnType("int");

                    b.Property<string>("Cins")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cinsiyet")
                        .HasColumnType("int");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SahibiVarMi")
                        .HasColumnType("bit");

                    b.Property<int>("SahipId")
                        .HasColumnType("int");

                    b.Property<string>("Tur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HayId");

                    b.HasIndex("BakiciId");

                    b.HasIndex("SahipId");

                    b.ToTable("Hayvanlar");
                });

            modelBuilder.Entity("HayvanBakimiDataAnnotation.Models.Sahip", b =>
                {
                    b.Property<int>("SahipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SahipId"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SahipId");

                    b.ToTable("Owner");
                });

            modelBuilder.Entity("HayvanBakimiDataAnnotation.Models.Yiyecek", b =>
                {
                    b.Property<int>("YiyecekId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YiyecekId"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kalori")
                        .HasColumnType("int");

                    b.HasKey("YiyecekId");

                    b.ToTable("Yiyecekler");
                });

            modelBuilder.Entity("HayvanYiyecek", b =>
                {
                    b.Property<int>("HayvanlarHayId")
                        .HasColumnType("int");

                    b.Property<int>("YiyeceklerYiyecekId")
                        .HasColumnType("int");

                    b.HasKey("HayvanlarHayId", "YiyeceklerYiyecekId");

                    b.HasIndex("YiyeceklerYiyecekId");

                    b.ToTable("HayvanYiyecek");
                });

            modelBuilder.Entity("HayvanBakimiDataAnnotation.Models.Hayvan", b =>
                {
                    b.HasOne("HayvanBakimiDataAnnotation.Models.Bakici", "Bakici")
                        .WithMany("Hayvanlar")
                        .HasForeignKey("BakiciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HayvanBakimiDataAnnotation.Models.Sahip", "Sahip")
                        .WithMany("Hayvanlar")
                        .HasForeignKey("SahipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bakici");

                    b.Navigation("Sahip");
                });

            modelBuilder.Entity("HayvanYiyecek", b =>
                {
                    b.HasOne("HayvanBakimiDataAnnotation.Models.Hayvan", null)
                        .WithMany()
                        .HasForeignKey("HayvanlarHayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HayvanBakimiDataAnnotation.Models.Yiyecek", null)
                        .WithMany()
                        .HasForeignKey("YiyeceklerYiyecekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HayvanBakimiDataAnnotation.Models.Bakici", b =>
                {
                    b.Navigation("Hayvanlar");
                });

            modelBuilder.Entity("HayvanBakimiDataAnnotation.Models.Sahip", b =>
                {
                    b.Navigation("Hayvanlar");
                });
#pragma warning restore 612, 618
        }
    }
}
